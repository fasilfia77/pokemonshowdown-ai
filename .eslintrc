{
  "root": true,
  "env": {
    "node": true,
    "mocha": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:eslint-comments/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:mocha/recommended",
    "plugin:node/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.eslint.json",
    "tsconfigRootDir": "."
  },
  "plugins": [
    "@typescript-eslint",
    "eslint-comments",
    "import",
    "mocha",
    "node",
    "prefer-arrow"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".d.ts"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.eslint.json"
      }
    },
    "node": {
      "allowModules": [
        "@pkmn/types", // Type-only package.
        "zeromq" // Installed separately.
      ],
      "tryExtensions": [".ts", ".d.ts"]
    }
  },
  "rules": {
    "@typescript-eslint/array-type": ["warn", {"default": "array"}],
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/explicit-member-accessibility": "warn",
    "@typescript-eslint/member-delimiter-style": "warn",
    "@typescript-eslint/method-signature-style": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "filter": {
          // Weather names.
          "regex": "^SunnyDay|RainDance|Sandstorm|Hail$",
          "match": false
        },
        "format": ["strictCamelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "typeParameter",
        "format": ["StrictPascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": ["typeLike", "enumMember"],
        "format": ["StrictPascalCase"]
      }
    ],
    "@typescript-eslint/no-base-to-string": [
      "error",
      {
        "ignoredTypeNames": ["Error"]
      }
    ],
    "@typescript-eslint/no-dynamic-delete": "warn",
    "@typescript-eslint/no-extraneous-class": "warn",
    "@typescript-eslint/no-invalid-void-type": "warn",
    "@typescript-eslint/no-meaningless-void-operator": "warn",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "warn",
      {
        "allowComparingNullableBooleansToTrue": true,
        "allowComparingNullableBooleansToFalse": true
      }
    ],
    "@typescript-eslint/no-unnecessary-qualifier": "warn",
    "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    "@typescript-eslint/no-var-requires": "off", // Already covered by @typescript-eslint/no-require-imports (recommended).
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-includes": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "warn",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": [
      "error",
      {
        "ignoreStringArrays": true
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/type-annotation-spacing": "warn",
    "accessor-pairs": ["warn", {"setWithoutGet": true}],
    "array-callback-return": ["warn", {"allowImplicit": true}],
    "arrow-body-style": ["warn", "as-needed"],
    "block-scoped-var": "error",
    "camelcase": "off", // Already covered by @typescript-eslint/naming-convention.
    "capitalized-comments": [
      "warn",
      "always",
      {
        "line": {
          "ignoreConsecutiveComments": true
        },
        "block": {
          "ignoreInlineComments": true
        }
      }
    ],
    "consistent-this": "warn",
    "curly": "warn",
    "eqeqeq": "warn",
    "eslint-comments/no-unused-disable": "error",
    "grouped-accessor-pairs": ["warn", "getBeforeSet"],
    "guard-for-in": "error",
    "import/first": "error",
    "import/namespace": "off", // Already checked by typescript.
    "import/order": ["warn", {"alphabetize": {"order": "asc"}}],
    "max-classes-per-file": "error",
    "mocha/no-exports": "off",
    "mocha/no-global-tests": "off",
    "mocha/no-hooks-for-single-case": "off",
    "mocha/no-pending-tests": "off",
    "mocha/no-setup-in-describe": "off",
    "mocha/no-sibling-hooks": "off",
    "no-alert": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "off",
    "no-console": ["error", {"allow": ["error", "log"]}],
    "no-constant-condition": "off", // Already covered by @typescript-eslint/no-unnecessary-condition (recommended).
    "no-constructor-return": "error",
    "no-duplicate-imports": ["warn", {"includeExports": true}],
    "no-else-return": ["warn", {"allowElseIf": false}],
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "off",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "warn",
    "no-extra-label": "warn",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "warn",
    "no-lone-blocks": "warn",
    "no-new": "warn",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-return-await": "off",
    "@typescript-eslint/return-await": ["warn", "always"],
    "no-script-url": "error",
    "no-self-compare": "warn",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "warn",
    "no-template-curly-in-string": "warn",
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "no-undef-init": "warn",
    "no-unneeded-ternary": "warn",
    "no-unreachable-loop": "warn",
    "no-useless-call": "warn",
    "no-useless-computed-key": ["warn", {"enforceForClassMembers": true}],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "no-useless-rename": "warn",
    "no-useless-return": "warn",
    "node/no-missing-import": "off", // Already covered by import/no-unresolved (recommended).
    "node/no-unsupported-features/es-syntax": [
      "error",
      {
        "ignores": ["modules"]
      }
    ],
    "no-var": "error",
    "object-shorthand": ["error", "always"],
    "one-var": ["error", "never"],
    "operator-assignment": "warn",
    "prefer-arrow/prefer-arrow-functions": [
      "warn",
      {
        "disallowPrototype": false,
        "singleReturnOnly": true,
        "classPropertiesAllowed": false,
        "allowStandaloneDeclarations": true
      }
    ],
    "prefer-const": ["warn", {"destructuring": "any"}],
    "prefer-destructuring": "warn",
    "prefer-exponentiation-operator": "warn",
    "prefer-named-capture-group": "warn",
    "prefer-numeric-literals": "warn",
    "prefer-object-spread": "warn",
    "prefer-promise-reject-errors": "error",
    "prefer-regex-literals": "warn",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "radix": "warn",
    "symbol-description": "error"
  },
  "overrides": [
    {
      // Allow dev dependencies in helper scripts/test files that don't go into
      // production.
      "files": ["scripts/**/*.ts", "src/ts/**/*.test.ts", "test/**/*.ts"],
      "settings": {
        "node": {
          "allowModules": ["@pkmn/types", "chai", "mocha", "websocket"]
        }
      },
      "rules": {
        "node/no-unpublished-import": "off"
      }
    }
  ]
}
